name: Build and Deploy Node.js App

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Récupérer le code source
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configurer Node.js
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4 : Construire l'image Docker
      - name: Build Docker image
        run: |
          docker build -t my-node-app:${{ github.sha }} .

  push_to_dockerhub:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Connexion à DockerHub
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Étape 2 : Pousser l'image Docker sur DockerHub
      - name: Push Docker image
        run: |
          docker tag my-node-app:${{ github.sha }} mariambodji/my-node-app:${{ github.sha }}
          docker push mariambodji/my-node-app:${{ github.sha }}

  deploy_to_cloud_run:
    needs: push_to_dockerhub
    runs-on: ubuntu-latest
    steps:
      # Étape 1 : Configurer l'outil gcloud
      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Étape 2 : Déployer sur Google Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy my-node-app \
            --image=mariambodji/my-node-app:${{ github.sha }} \
            --region=us-central1 \
            --platform=managed \
            --allow-unauthenticated
